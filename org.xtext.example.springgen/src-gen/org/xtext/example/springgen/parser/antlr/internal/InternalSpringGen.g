/*
 * generated by Xtext 2.37.0
 */
grammar InternalSpringGen;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package org.xtext.example.springgen.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.xtext.example.springgen.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.xtext.example.springgen.services.SpringGenGrammarAccess;

}

@parser::members {

 	private SpringGenGrammarAccess grammarAccess;

    public InternalSpringGenParser(TokenStream input, SpringGenGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "SpringBootProject";
   	}

   	@Override
   	protected SpringGenGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleSpringBootProject
entryRuleSpringBootProject returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSpringBootProjectRule()); }
	iv_ruleSpringBootProject=ruleSpringBootProject
	{ $current=$iv_ruleSpringBootProject.current; }
	EOF;

// Rule SpringBootProject
ruleSpringBootProject returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='project'
		{
			newLeafNode(otherlv_0, grammarAccess.getSpringBootProjectAccess().getProjectKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getSpringBootProjectAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSpringBootProjectRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getSpringBootProjectAccess().getConfigurationProjectConfigurationParserRuleCall_2_0());
				}
				lv_configuration_2_0=ruleProjectConfiguration
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSpringBootProjectRule());
					}
					set(
						$current,
						"configuration",
						lv_configuration_2_0,
						"org.xtext.example.springgen.SpringGen.ProjectConfiguration");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getSpringBootProjectAccess().getElementsProjectElementParserRuleCall_3_0());
				}
				lv_elements_3_0=ruleProjectElement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSpringBootProjectRule());
					}
					add(
						$current,
						"elements",
						lv_elements_3_0,
						"org.xtext.example.springgen.SpringGen.ProjectElement");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRuleProjectElement
entryRuleProjectElement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getProjectElementRule()); }
	iv_ruleProjectElement=ruleProjectElement
	{ $current=$iv_ruleProjectElement.current; }
	EOF;

// Rule ProjectElement
ruleProjectElement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getProjectElementAccess().getEntityParserRuleCall_0());
		}
		this_Entity_0=ruleEntity
		{
			$current = $this_Entity_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getProjectElementAccess().getEntityRelationshipParserRuleCall_1());
		}
		this_EntityRelationship_1=ruleEntityRelationship
		{
			$current = $this_EntityRelationship_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getProjectElementAccess().getDTOParserRuleCall_2());
		}
		this_DTO_2=ruleDTO
		{
			$current = $this_DTO_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getProjectElementAccess().getServiceParserRuleCall_3());
		}
		this_Service_3=ruleService
		{
			$current = $this_Service_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getProjectElementAccess().getRepositoryParserRuleCall_4());
		}
		this_Repository_4=ruleRepository
		{
			$current = $this_Repository_4.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getProjectElementAccess().getControllerParserRuleCall_5());
		}
		this_Controller_5=ruleController
		{
			$current = $this_Controller_5.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleEntityRelationship
entryRuleEntityRelationship returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEntityRelationshipRule()); }
	iv_ruleEntityRelationship=ruleEntityRelationship
	{ $current=$iv_ruleEntityRelationship.current; }
	EOF;

// Rule EntityRelationship
ruleEntityRelationship returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='relation'
		{
			newLeafNode(otherlv_0, grammarAccess.getEntityRelationshipAccess().getRelationKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getEntityRelationshipAccess().getTypeDatabaseRelationsParserRuleCall_1_0());
				}
				lv_type_1_0=ruleDatabaseRelations
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEntityRelationshipRule());
					}
					set(
						$current,
						"type",
						lv_type_1_0,
						"org.xtext.example.springgen.SpringGen.DatabaseRelations");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='between'
		{
			newLeafNode(otherlv_2, grammarAccess.getEntityRelationshipAccess().getBetweenKeyword_2());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getEntityRelationshipRule());
					}
				}
				otherlv_3=RULE_ID
				{
					newLeafNode(otherlv_3, grammarAccess.getEntityRelationshipAccess().getSourceEntityCrossReference_3_0());
				}
			)
		)
		otherlv_4='and'
		{
			newLeafNode(otherlv_4, grammarAccess.getEntityRelationshipAccess().getAndKeyword_4());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getEntityRelationshipRule());
					}
				}
				otherlv_5=RULE_ID
				{
					newLeafNode(otherlv_5, grammarAccess.getEntityRelationshipAccess().getTargetEntityCrossReference_5_0());
				}
			)
		)
	)
;

// Entry rule entryRuleProjectConfiguration
entryRuleProjectConfiguration returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getProjectConfigurationRule()); }
	iv_ruleProjectConfiguration=ruleProjectConfiguration
	{ $current=$iv_ruleProjectConfiguration.current; }
	EOF;

// Rule ProjectConfiguration
ruleProjectConfiguration returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='config'
		{
			newLeafNode(otherlv_0, grammarAccess.getProjectConfigurationAccess().getConfigKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getProjectConfigurationAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getProjectConfigurationAccess().getServerServerConfigurationParserRuleCall_2_0());
				}
				lv_server_2_0=ruleServerConfiguration
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getProjectConfigurationRule());
					}
					set(
						$current,
						"server",
						lv_server_2_0,
						"org.xtext.example.springgen.SpringGen.ServerConfiguration");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getProjectConfigurationAccess().getDatabaseDatabaseConfigurationParserRuleCall_3_0());
				}
				lv_database_3_0=ruleDatabaseConfiguration
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getProjectConfigurationRule());
					}
					set(
						$current,
						"database",
						lv_database_3_0,
						"org.xtext.example.springgen.SpringGen.DatabaseConfiguration");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4='}'
		{
			newLeafNode(otherlv_4, grammarAccess.getProjectConfigurationAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleServerConfiguration
entryRuleServerConfiguration returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getServerConfigurationRule()); }
	iv_ruleServerConfiguration=ruleServerConfiguration
	{ $current=$iv_ruleServerConfiguration.current; }
	EOF;

// Rule ServerConfiguration
ruleServerConfiguration returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='server'
		{
			newLeafNode(otherlv_0, grammarAccess.getServerConfigurationAccess().getServerKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getServerConfigurationAccess().getLeftCurlyBracketKeyword_1());
		}
		otherlv_2='port'
		{
			newLeafNode(otherlv_2, grammarAccess.getServerConfigurationAccess().getPortKeyword_2());
		}
		(
			(
				lv_port_3_0=RULE_INT
				{
					newLeafNode(lv_port_3_0, grammarAccess.getServerConfigurationAccess().getPortINTTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getServerConfigurationRule());
					}
					setWithLastConsumed(
						$current,
						"port",
						lv_port_3_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		(
			otherlv_4='contextPath'
			{
				newLeafNode(otherlv_4, grammarAccess.getServerConfigurationAccess().getContextPathKeyword_4_0());
			}
			(
				(
					lv_contextPath_5_0=RULE_STRING
					{
						newLeafNode(lv_contextPath_5_0, grammarAccess.getServerConfigurationAccess().getContextPathSTRINGTerminalRuleCall_4_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getServerConfigurationRule());
						}
						setWithLastConsumed(
							$current,
							"contextPath",
							lv_contextPath_5_0,
							"org.eclipse.xtext.common.Terminals.STRING");
					}
				)
			)
		)?
		otherlv_6='}'
		{
			newLeafNode(otherlv_6, grammarAccess.getServerConfigurationAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleDatabaseConfiguration
entryRuleDatabaseConfiguration returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDatabaseConfigurationRule()); }
	iv_ruleDatabaseConfiguration=ruleDatabaseConfiguration
	{ $current=$iv_ruleDatabaseConfiguration.current; }
	EOF;

// Rule DatabaseConfiguration
ruleDatabaseConfiguration returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='database'
		{
			newLeafNode(otherlv_0, grammarAccess.getDatabaseConfigurationAccess().getDatabaseKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getDatabaseConfigurationAccess().getLeftCurlyBracketKeyword_1());
		}
		otherlv_2='dbms'
		{
			newLeafNode(otherlv_2, grammarAccess.getDatabaseConfigurationAccess().getDbmsKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDatabaseConfigurationAccess().getTypeRDBMSParserRuleCall_3_0());
				}
				lv_type_3_0=ruleRDBMS
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDatabaseConfigurationRule());
					}
					set(
						$current,
						"type",
						lv_type_3_0,
						"org.xtext.example.springgen.SpringGen.RDBMS");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4='name'
		{
			newLeafNode(otherlv_4, grammarAccess.getDatabaseConfigurationAccess().getNameKeyword_4());
		}
		(
			(
				lv_name_5_0=RULE_ID
				{
					newLeafNode(lv_name_5_0, grammarAccess.getDatabaseConfigurationAccess().getNameIDTerminalRuleCall_5_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDatabaseConfigurationRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_5_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_6='port'
		{
			newLeafNode(otherlv_6, grammarAccess.getDatabaseConfigurationAccess().getPortKeyword_6());
		}
		(
			(
				lv_port_7_0=RULE_INT
				{
					newLeafNode(lv_port_7_0, grammarAccess.getDatabaseConfigurationAccess().getPortINTTerminalRuleCall_7_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDatabaseConfigurationRule());
					}
					setWithLastConsumed(
						$current,
						"port",
						lv_port_7_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_8='username'
		{
			newLeafNode(otherlv_8, grammarAccess.getDatabaseConfigurationAccess().getUsernameKeyword_8());
		}
		(
			(
				lv_username_9_0=RULE_ID
				{
					newLeafNode(lv_username_9_0, grammarAccess.getDatabaseConfigurationAccess().getUsernameIDTerminalRuleCall_9_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDatabaseConfigurationRule());
					}
					setWithLastConsumed(
						$current,
						"username",
						lv_username_9_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_10='password'
		{
			newLeafNode(otherlv_10, grammarAccess.getDatabaseConfigurationAccess().getPasswordKeyword_10());
		}
		(
			(
				lv_password_11_0=RULE_ID
				{
					newLeafNode(lv_password_11_0, grammarAccess.getDatabaseConfigurationAccess().getPasswordIDTerminalRuleCall_11_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDatabaseConfigurationRule());
					}
					setWithLastConsumed(
						$current,
						"password",
						lv_password_11_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_12='}'
		{
			newLeafNode(otherlv_12, grammarAccess.getDatabaseConfigurationAccess().getRightCurlyBracketKeyword_12());
		}
	)
;

// Entry rule entryRuleEntity
entryRuleEntity returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEntityRule()); }
	iv_ruleEntity=ruleEntity
	{ $current=$iv_ruleEntity.current; }
	EOF;

// Rule Entity
ruleEntity returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='entity'
		{
			newLeafNode(otherlv_0, grammarAccess.getEntityAccess().getEntityKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getEntityAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getEntityRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			otherlv_2='inherits'
			{
				newLeafNode(otherlv_2, grammarAccess.getEntityAccess().getInheritsKeyword_2_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getEntityRule());
						}
					}
					otherlv_3=RULE_ID
					{
						newLeafNode(otherlv_3, grammarAccess.getEntityAccess().getExtendsEntityCrossReference_2_1_0());
					}
				)
			)
		)?
		otherlv_4='{'
		{
			newLeafNode(otherlv_4, grammarAccess.getEntityAccess().getLeftCurlyBracketKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getEntityAccess().getIdentifierIdentifierParserRuleCall_4_0());
				}
				lv_identifier_5_0=ruleIdentifier
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEntityRule());
					}
					set(
						$current,
						"identifier",
						lv_identifier_5_0,
						"org.xtext.example.springgen.SpringGen.Identifier");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getEntityAccess().getPropertiesPropertyParserRuleCall_5_0());
				}
				lv_properties_6_0=ruleProperty
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEntityRule());
					}
					add(
						$current,
						"properties",
						lv_properties_6_0,
						"org.xtext.example.springgen.SpringGen.Property");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getEntityAccess().getRepositoryRepositoryParserRuleCall_6_0());
				}
				lv_repository_7_0=ruleRepository
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEntityRule());
					}
					set(
						$current,
						"repository",
						lv_repository_7_0,
						"org.xtext.example.springgen.SpringGen.Repository");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getEntityAccess().getServicesServiceParserRuleCall_7_0());
				}
				lv_services_8_0=ruleService
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEntityRule());
					}
					add(
						$current,
						"services",
						lv_services_8_0,
						"org.xtext.example.springgen.SpringGen.Service");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getEntityAccess().getControllerControllerParserRuleCall_8_0());
				}
				lv_controller_9_0=ruleController
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEntityRule());
					}
					set(
						$current,
						"controller",
						lv_controller_9_0,
						"org.xtext.example.springgen.SpringGen.Controller");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		otherlv_10='}'
		{
			newLeafNode(otherlv_10, grammarAccess.getEntityAccess().getRightCurlyBracketKeyword_9());
		}
	)
;

// Entry rule entryRuleIdentifier
entryRuleIdentifier returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIdentifierRule()); }
	iv_ruleIdentifier=ruleIdentifier
	{ $current=$iv_ruleIdentifier.current; }
	EOF;

// Rule Identifier
ruleIdentifier returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Id'
		{
			newLeafNode(otherlv_0, grammarAccess.getIdentifierAccess().getIdKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getIdentifierAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getIdentifierRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getIdentifierAccess().getTypeValueTypesParserRuleCall_2_0());
				}
				lv_type_2_0=ruleValueTypes
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getIdentifierRule());
					}
					set(
						$current,
						"type",
						lv_type_2_0,
						"org.xtext.example.springgen.SpringGen.ValueTypes");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleDTO
entryRuleDTO returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDTORule()); }
	iv_ruleDTO=ruleDTO
	{ $current=$iv_ruleDTO.current; }
	EOF;

// Rule DTO
ruleDTO returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='dto'
		{
			newLeafNode(otherlv_0, grammarAccess.getDTOAccess().getDtoKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getDTOAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDTORule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getDTOAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDTOAccess().getPropertiesPropertyParserRuleCall_3_0());
				}
				lv_properties_3_0=ruleProperty
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDTORule());
					}
					add(
						$current,
						"properties",
						lv_properties_3_0,
						"org.xtext.example.springgen.SpringGen.Property");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_4='}'
		{
			newLeafNode(otherlv_4, grammarAccess.getDTOAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleService
entryRuleService returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getServiceRule()); }
	iv_ruleService=ruleService
	{ $current=$iv_ruleService.current; }
	EOF;

// Rule Service
ruleService returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='service'
		{
			newLeafNode(otherlv_0, grammarAccess.getServiceAccess().getServiceKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getServiceAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getServiceRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			otherlv_2='pertainingTo'
			{
				newLeafNode(otherlv_2, grammarAccess.getServiceAccess().getPertainingToKeyword_2_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getServiceRule());
						}
					}
					otherlv_3=RULE_ID
					{
						newLeafNode(otherlv_3, grammarAccess.getServiceAccess().getEntityEntityCrossReference_2_1_0());
					}
				)
			)
		)?
		otherlv_4='{'
		{
			newLeafNode(otherlv_4, grammarAccess.getServiceAccess().getLeftCurlyBracketKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getServiceAccess().getActionsServiceActionParserRuleCall_4_0());
				}
				lv_actions_5_0=ruleServiceAction
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getServiceRule());
					}
					add(
						$current,
						"actions",
						lv_actions_5_0,
						"org.xtext.example.springgen.SpringGen.ServiceAction");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_6='}'
		{
			newLeafNode(otherlv_6, grammarAccess.getServiceAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleController
entryRuleController returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getControllerRule()); }
	iv_ruleController=ruleController
	{ $current=$iv_ruleController.current; }
	EOF;

// Rule Controller
ruleController returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='controller'
		{
			newLeafNode(otherlv_0, grammarAccess.getControllerAccess().getControllerKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getControllerAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			(
				lv_baseUrl_2_0=RULE_STRING
				{
					newLeafNode(lv_baseUrl_2_0, grammarAccess.getControllerAccess().getBaseUrlSTRINGTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getControllerRule());
					}
					setWithLastConsumed(
						$current,
						"baseUrl",
						lv_baseUrl_2_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getControllerAccess().getCustomActionsCustomActionParserRuleCall_3_0());
				}
				lv_customActions_3_0=ruleCustomAction
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getControllerRule());
					}
					add(
						$current,
						"customActions",
						lv_customActions_3_0,
						"org.xtext.example.springgen.SpringGen.CustomAction");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			otherlv_4='create'
			{
				newLeafNode(otherlv_4, grammarAccess.getControllerAccess().getCreateKeyword_4_0());
			}
			otherlv_5='entity:'
			{
				newLeafNode(otherlv_5, grammarAccess.getControllerAccess().getEntityKeyword_4_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getControllerAccess().getCreateParamParamTransferParserRuleCall_4_2_0());
					}
					lv_createParam_6_0=ruleParamTransfer
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getControllerRule());
						}
						set(
							$current,
							"createParam",
							lv_createParam_6_0,
							"org.xtext.example.springgen.SpringGen.ParamTransfer");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_7='find'
			{
				newLeafNode(otherlv_7, grammarAccess.getControllerAccess().getFindKeyword_5_0());
			}
			otherlv_8='entity:'
			{
				newLeafNode(otherlv_8, grammarAccess.getControllerAccess().getEntityKeyword_5_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getControllerAccess().getFindParamParamTransferParserRuleCall_5_2_0());
					}
					lv_findParam_9_0=ruleParamTransfer
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getControllerRule());
						}
						set(
							$current,
							"findParam",
							lv_findParam_9_0,
							"org.xtext.example.springgen.SpringGen.ParamTransfer");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_10='delete'
			{
				newLeafNode(otherlv_10, grammarAccess.getControllerAccess().getDeleteKeyword_6_0());
			}
			otherlv_11='entity:'
			{
				newLeafNode(otherlv_11, grammarAccess.getControllerAccess().getEntityKeyword_6_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getControllerAccess().getDeleteParamParamTransferParserRuleCall_6_2_0());
					}
					lv_deleteParam_12_0=ruleParamTransfer
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getControllerRule());
						}
						set(
							$current,
							"deleteParam",
							lv_deleteParam_12_0,
							"org.xtext.example.springgen.SpringGen.ParamTransfer");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_13='}'
		{
			newLeafNode(otherlv_13, grammarAccess.getControllerAccess().getRightCurlyBracketKeyword_7());
		}
	)
;

// Entry rule entryRuleServiceAction
entryRuleServiceAction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getServiceActionRule()); }
	iv_ruleServiceAction=ruleServiceAction
	{ $current=$iv_ruleServiceAction.current; }
	EOF;

// Rule ServiceAction
ruleServiceAction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='operation'
		{
			newLeafNode(otherlv_0, grammarAccess.getServiceActionAccess().getOperationKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getServiceActionAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getServiceActionRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getServiceActionAccess().getLeftCurlyBracketKeyword_2());
		}
		otherlv_3='returns'
		{
			newLeafNode(otherlv_3, grammarAccess.getServiceActionAccess().getReturnsKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getServiceActionAccess().getReturnTypeReturnTypeParserRuleCall_4_0());
				}
				lv_returnType_4_0=ruleReturnType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getServiceActionRule());
					}
					set(
						$current,
						"returnType",
						lv_returnType_4_0,
						"org.xtext.example.springgen.SpringGen.ReturnType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_5='raises'
			{
				newLeafNode(otherlv_5, grammarAccess.getServiceActionAccess().getRaisesKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getServiceActionAccess().getExceptionTypeTypeParserRuleCall_5_1_0());
					}
					lv_exceptionType_6_0=ruleType
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getServiceActionRule());
						}
						set(
							$current,
							"exceptionType",
							lv_exceptionType_6_0,
							"org.xtext.example.springgen.SpringGen.Type");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_7='implementation'
			{
				newLeafNode(otherlv_7, grammarAccess.getServiceActionAccess().getImplementationKeyword_6_0());
			}
			(
				(
					lv_implementation_8_0=RULE_STRING
					{
						newLeafNode(lv_implementation_8_0, grammarAccess.getServiceActionAccess().getImplementationSTRINGTerminalRuleCall_6_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getServiceActionRule());
						}
						setWithLastConsumed(
							$current,
							"implementation",
							lv_implementation_8_0,
							"org.eclipse.xtext.common.Terminals.STRING");
					}
				)
			)
		)?
		otherlv_9='params'
		{
			newLeafNode(otherlv_9, grammarAccess.getServiceActionAccess().getParamsKeyword_7());
		}
		otherlv_10='('
		{
			newLeafNode(otherlv_10, grammarAccess.getServiceActionAccess().getLeftParenthesisKeyword_8());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getServiceActionAccess().getParametersActionParameterParserRuleCall_9_0());
				}
				lv_parameters_11_0=ruleActionParameter
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getServiceActionRule());
					}
					add(
						$current,
						"parameters",
						lv_parameters_11_0,
						"org.xtext.example.springgen.SpringGen.ActionParameter");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_12=')'
		{
			newLeafNode(otherlv_12, grammarAccess.getServiceActionAccess().getRightParenthesisKeyword_10());
		}
		otherlv_13='}'
		{
			newLeafNode(otherlv_13, grammarAccess.getServiceActionAccess().getRightCurlyBracketKeyword_11());
		}
	)
;

// Entry rule entryRuleCustomAction
entryRuleCustomAction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCustomActionRule()); }
	iv_ruleCustomAction=ruleCustomAction
	{ $current=$iv_ruleCustomAction.current; }
	EOF;

// Rule CustomAction
ruleCustomAction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getCustomActionAccess().getMethodHttpMethodsParserRuleCall_0_0());
				}
				lv_method_0_0=ruleHttpMethods
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCustomActionRule());
					}
					set(
						$current,
						"method",
						lv_method_0_0,
						"org.xtext.example.springgen.SpringGen.HttpMethods");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1='action'
		{
			newLeafNode(otherlv_1, grammarAccess.getCustomActionAccess().getActionKeyword_1());
		}
		(
			(
				lv_name_2_0=RULE_ID
				{
					newLeafNode(lv_name_2_0, grammarAccess.getCustomActionAccess().getNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCustomActionRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_3='{'
		{
			newLeafNode(otherlv_3, grammarAccess.getCustomActionAccess().getLeftCurlyBracketKeyword_3());
		}
		(
			otherlv_4='mappedAt'
			{
				newLeafNode(otherlv_4, grammarAccess.getCustomActionAccess().getMappedAtKeyword_4_0());
			}
			(
				(
					lv_url_5_0=RULE_STRING
					{
						newLeafNode(lv_url_5_0, grammarAccess.getCustomActionAccess().getUrlSTRINGTerminalRuleCall_4_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getCustomActionRule());
						}
						setWithLastConsumed(
							$current,
							"url",
							lv_url_5_0,
							"org.eclipse.xtext.common.Terminals.STRING");
					}
				)
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getCustomActionAccess().getParametersActionParameterParserRuleCall_5_0());
				}
				lv_parameters_6_0=ruleActionParameter
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCustomActionRule());
					}
					add(
						$current,
						"parameters",
						lv_parameters_6_0,
						"org.xtext.example.springgen.SpringGen.ActionParameter");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_7='}'
		{
			newLeafNode(otherlv_7, grammarAccess.getCustomActionAccess().getRightCurlyBracketKeyword_6());
		}
	)
;

// Entry rule entryRuleActionParameter
entryRuleActionParameter returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getActionParameterRule()); }
	iv_ruleActionParameter=ruleActionParameter
	{ $current=$iv_ruleActionParameter.current; }
	EOF;

// Rule ActionParameter
ruleActionParameter returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0=RULE_ID
				{
					newLeafNode(lv_name_0_0, grammarAccess.getActionParameterAccess().getNameIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getActionParameterRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_0_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getActionParameterAccess().getColonKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getActionParameterAccess().getTypeTypeParserRuleCall_2_0());
				}
				lv_type_2_0=ruleType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getActionParameterRule());
					}
					set(
						$current,
						"type",
						lv_type_2_0,
						"org.xtext.example.springgen.SpringGen.Type");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_3='default'
			{
				newLeafNode(otherlv_3, grammarAccess.getActionParameterAccess().getDefaultKeyword_3_0());
			}
			(
				(
					lv_defaultValue_4_0=RULE_STRING
					{
						newLeafNode(lv_defaultValue_4_0, grammarAccess.getActionParameterAccess().getDefaultValueSTRINGTerminalRuleCall_3_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getActionParameterRule());
						}
						setWithLastConsumed(
							$current,
							"defaultValue",
							lv_defaultValue_4_0,
							"org.eclipse.xtext.common.Terminals.STRING");
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleRepository
entryRuleRepository returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRepositoryRule()); }
	iv_ruleRepository=ruleRepository
	{ $current=$iv_ruleRepository.current; }
	EOF;

// Rule Repository
ruleRepository returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='repository'
		{
			newLeafNode(otherlv_0, grammarAccess.getRepositoryAccess().getRepositoryKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getRepositoryAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getRepositoryAccess().getFindByFindByMethodParserRuleCall_2_0());
				}
				lv_findBy_2_0=ruleFindByMethod
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRepositoryRule());
					}
					add(
						$current,
						"findBy",
						lv_findBy_2_0,
						"org.xtext.example.springgen.SpringGen.FindByMethod");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getRepositoryAccess().getDeleteByDeleteByMethodParserRuleCall_3_0());
				}
				lv_deleteBy_3_0=ruleDeleteByMethod
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRepositoryRule());
					}
					add(
						$current,
						"deleteBy",
						lv_deleteBy_3_0,
						"org.xtext.example.springgen.SpringGen.DeleteByMethod");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getRepositoryAccess().getCustomQueryMethodCustomQueryMethodParserRuleCall_4_0());
				}
				lv_customQueryMethod_4_0=ruleCustomQueryMethod
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRepositoryRule());
					}
					add(
						$current,
						"customQueryMethod",
						lv_customQueryMethod_4_0,
						"org.xtext.example.springgen.SpringGen.CustomQueryMethod");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_5='}'
		{
			newLeafNode(otherlv_5, grammarAccess.getRepositoryAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleFindByMethod
entryRuleFindByMethod returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFindByMethodRule()); }
	iv_ruleFindByMethod=ruleFindByMethod
	{ $current=$iv_ruleFindByMethod.current; }
	EOF;

// Rule FindByMethod
ruleFindByMethod returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='find'
		{
			newLeafNode(otherlv_0, grammarAccess.getFindByMethodAccess().getFindKeyword_0());
		}
		otherlv_1='by'
		{
			newLeafNode(otherlv_1, grammarAccess.getFindByMethodAccess().getByKeyword_1());
		}
		(
			(
				lv_property_2_0=RULE_ID
				{
					newLeafNode(lv_property_2_0, grammarAccess.getFindByMethodAccess().getPropertyIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFindByMethodRule());
					}
					setWithLastConsumed(
						$current,
						"property",
						lv_property_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_3=':'
		{
			newLeafNode(otherlv_3, grammarAccess.getFindByMethodAccess().getColonKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getFindByMethodAccess().getPropertyTypeValueTypesParserRuleCall_4_0());
				}
				lv_propertyType_4_0=ruleValueTypes
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFindByMethodRule());
					}
					set(
						$current,
						"propertyType",
						lv_propertyType_4_0,
						"org.xtext.example.springgen.SpringGen.ValueTypes");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleDeleteByMethod
entryRuleDeleteByMethod returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDeleteByMethodRule()); }
	iv_ruleDeleteByMethod=ruleDeleteByMethod
	{ $current=$iv_ruleDeleteByMethod.current; }
	EOF;

// Rule DeleteByMethod
ruleDeleteByMethod returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='delete'
		{
			newLeafNode(otherlv_0, grammarAccess.getDeleteByMethodAccess().getDeleteKeyword_0());
		}
		otherlv_1='by'
		{
			newLeafNode(otherlv_1, grammarAccess.getDeleteByMethodAccess().getByKeyword_1());
		}
		(
			(
				lv_property_2_0=RULE_ID
				{
					newLeafNode(lv_property_2_0, grammarAccess.getDeleteByMethodAccess().getPropertyIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDeleteByMethodRule());
					}
					setWithLastConsumed(
						$current,
						"property",
						lv_property_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_3=':'
		{
			newLeafNode(otherlv_3, grammarAccess.getDeleteByMethodAccess().getColonKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDeleteByMethodAccess().getPropertyTypeValueTypesParserRuleCall_4_0());
				}
				lv_propertyType_4_0=ruleValueTypes
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDeleteByMethodRule());
					}
					set(
						$current,
						"propertyType",
						lv_propertyType_4_0,
						"org.xtext.example.springgen.SpringGen.ValueTypes");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleCustomQueryMethod
entryRuleCustomQueryMethod returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCustomQueryMethodRule()); }
	iv_ruleCustomQueryMethod=ruleCustomQueryMethod
	{ $current=$iv_ruleCustomQueryMethod.current; }
	EOF;

// Rule CustomQueryMethod
ruleCustomQueryMethod returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='customQuery'
		{
			newLeafNode(otherlv_0, grammarAccess.getCustomQueryMethodAccess().getCustomQueryKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getCustomQueryMethodAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			(
				lv_query_2_0=RULE_STRING
				{
					newLeafNode(lv_query_2_0, grammarAccess.getCustomQueryMethodAccess().getQuerySTRINGTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCustomQueryMethodRule());
					}
					setWithLastConsumed(
						$current,
						"query",
						lv_query_2_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_3='}'
		{
			newLeafNode(otherlv_3, grammarAccess.getCustomQueryMethodAccess().getRightCurlyBracketKeyword_3());
		}
	)
;

// Entry rule entryRuleProperty
entryRuleProperty returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPropertyRule()); }
	iv_ruleProperty=ruleProperty
	{ $current=$iv_ruleProperty.current; }
	EOF;

// Rule Property
ruleProperty returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0=RULE_ID
				{
					newLeafNode(lv_name_0_0, grammarAccess.getPropertyAccess().getNameIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPropertyRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_0_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getPropertyAccess().getColonKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getPropertyAccess().getTypeTypeParserRuleCall_2_0());
				}
				lv_type_2_0=ruleType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPropertyRule());
					}
					set(
						$current,
						"type",
						lv_type_2_0,
						"org.xtext.example.springgen.SpringGen.Type");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_3='default'
			{
				newLeafNode(otherlv_3, grammarAccess.getPropertyAccess().getDefaultKeyword_3_0());
			}
			(
				(
					lv_defaultValue_4_0=RULE_STRING
					{
						newLeafNode(lv_defaultValue_4_0, grammarAccess.getPropertyAccess().getDefaultValueSTRINGTerminalRuleCall_3_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getPropertyRule());
						}
						setWithLastConsumed(
							$current,
							"defaultValue",
							lv_defaultValue_4_0,
							"org.eclipse.xtext.common.Terminals.STRING");
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleType
entryRuleType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTypeRule()); }
	iv_ruleType=ruleType
	{ $current=$iv_ruleType.current; }
	EOF;

// Rule Type
ruleType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getTypeAccess().getValueTypesParserRuleCall_0());
		}
		this_ValueTypes_0=ruleValueTypes
		{
			$current = $this_ValueTypes_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getTypeAccess().getListTypeParserRuleCall_1());
		}
		this_ListType_1=ruleListType
		{
			$current = $this_ListType_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getTypeAccess().getSetTypeParserRuleCall_2());
		}
		this_SetType_2=ruleSetType
		{
			$current = $this_SetType_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleReturnType
entryRuleReturnType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getReturnTypeRule()); }
	iv_ruleReturnType=ruleReturnType
	{ $current=$iv_ruleReturnType.current; }
	EOF;

// Rule ReturnType
ruleReturnType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getReturnTypeAccess().getValueTypesParserRuleCall_0());
		}
		this_ValueTypes_0=ruleValueTypes
		{
			$current = $this_ValueTypes_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getReturnTypeAccess().getListTypeParserRuleCall_1());
		}
		this_ListType_1=ruleListType
		{
			$current = $this_ListType_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		this_ID_2=RULE_ID
		{
			newLeafNode(this_ID_2, grammarAccess.getReturnTypeAccess().getIDTerminalRuleCall_2());
		}
	)
;

// Entry rule entryRuleListType
entryRuleListType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getListTypeRule()); }
	iv_ruleListType=ruleListType
	{ $current=$iv_ruleListType.current; }
	EOF;

// Rule ListType
ruleListType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='List<'
		{
			newLeafNode(otherlv_0, grammarAccess.getListTypeAccess().getListKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getListTypeAccess().getTypeTypeParserRuleCall_1_0());
				}
				lv_type_1_0=ruleType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getListTypeRule());
					}
					set(
						$current,
						"type",
						lv_type_1_0,
						"org.xtext.example.springgen.SpringGen.Type");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='>'
		{
			newLeafNode(otherlv_2, grammarAccess.getListTypeAccess().getGreaterThanSignKeyword_2());
		}
	)
;

// Entry rule entryRuleSetType
entryRuleSetType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSetTypeRule()); }
	iv_ruleSetType=ruleSetType
	{ $current=$iv_ruleSetType.current; }
	EOF;

// Rule SetType
ruleSetType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Set<'
		{
			newLeafNode(otherlv_0, grammarAccess.getSetTypeAccess().getSetKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSetTypeAccess().getTypeTypeParserRuleCall_1_0());
				}
				lv_type_1_0=ruleType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSetTypeRule());
					}
					set(
						$current,
						"type",
						lv_type_1_0,
						"org.xtext.example.springgen.SpringGen.Type");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='>'
		{
			newLeafNode(otherlv_2, grammarAccess.getSetTypeAccess().getGreaterThanSignKeyword_2());
		}
	)
;

// Entry rule entryRuleValueTypes
entryRuleValueTypes returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getValueTypesRule()); }
	iv_ruleValueTypes=ruleValueTypes
	{ $current=$iv_ruleValueTypes.current; }
	EOF;

// Rule ValueTypes
ruleValueTypes returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_FLOAT_0_0='float'
				{
					newLeafNode(lv_FLOAT_0_0, grammarAccess.getValueTypesAccess().getFLOATFloatKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getValueTypesRule());
					}
					setWithLastConsumed($current, "FLOAT", lv_FLOAT_0_0, "float");
				}
			)
		)
		    |
		(
			(
				lv_LONG_1_0='long'
				{
					newLeafNode(lv_LONG_1_0, grammarAccess.getValueTypesAccess().getLONGLongKeyword_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getValueTypesRule());
					}
					setWithLastConsumed($current, "LONG", lv_LONG_1_0, "long");
				}
			)
		)
		    |
		(
			(
				lv_INTEGER_2_0='int'
				{
					newLeafNode(lv_INTEGER_2_0, grammarAccess.getValueTypesAccess().getINTEGERIntKeyword_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getValueTypesRule());
					}
					setWithLastConsumed($current, "INTEGER", lv_INTEGER_2_0, "int");
				}
			)
		)
		    |
		(
			(
				lv_CHAR_3_0='char'
				{
					newLeafNode(lv_CHAR_3_0, grammarAccess.getValueTypesAccess().getCHARCharKeyword_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getValueTypesRule());
					}
					setWithLastConsumed($current, "CHAR", lv_CHAR_3_0, "char");
				}
			)
		)
		    |
		(
			(
				lv_BOOLEAN_4_0='boolean'
				{
					newLeafNode(lv_BOOLEAN_4_0, grammarAccess.getValueTypesAccess().getBOOLEANBooleanKeyword_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getValueTypesRule());
					}
					setWithLastConsumed($current, "BOOLEAN", lv_BOOLEAN_4_0, "boolean");
				}
			)
		)
		    |
		(
			(
				lv_BYTE_5_0='byte'
				{
					newLeafNode(lv_BYTE_5_0, grammarAccess.getValueTypesAccess().getBYTEByteKeyword_5_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getValueTypesRule());
					}
					setWithLastConsumed($current, "BYTE", lv_BYTE_5_0, "byte");
				}
			)
		)
		    |
		(
			(
				lv_STRING_6_0='String'
				{
					newLeafNode(lv_STRING_6_0, grammarAccess.getValueTypesAccess().getSTRINGStringKeyword_6_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getValueTypesRule());
					}
					setWithLastConsumed($current, "STRING", lv_STRING_6_0, "String");
				}
			)
		)
	)
;

// Entry rule entryRuleHttpMethods
entryRuleHttpMethods returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getHttpMethodsRule()); }
	iv_ruleHttpMethods=ruleHttpMethods
	{ $current=$iv_ruleHttpMethods.current; }
	EOF;

// Rule HttpMethods
ruleHttpMethods returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_GET_0_0='GET'
				{
					newLeafNode(lv_GET_0_0, grammarAccess.getHttpMethodsAccess().getGETGETKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getHttpMethodsRule());
					}
					setWithLastConsumed($current, "GET", lv_GET_0_0, "GET");
				}
			)
		)
		    |
		(
			(
				lv_DELETE_1_0='DELETE'
				{
					newLeafNode(lv_DELETE_1_0, grammarAccess.getHttpMethodsAccess().getDELETEDELETEKeyword_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getHttpMethodsRule());
					}
					setWithLastConsumed($current, "DELETE", lv_DELETE_1_0, "DELETE");
				}
			)
		)
		    |
		(
			(
				lv_POST_2_0='POST'
				{
					newLeafNode(lv_POST_2_0, grammarAccess.getHttpMethodsAccess().getPOSTPOSTKeyword_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getHttpMethodsRule());
					}
					setWithLastConsumed($current, "POST", lv_POST_2_0, "POST");
				}
			)
		)
		    |
		(
			(
				lv_PUT_3_0='PUT'
				{
					newLeafNode(lv_PUT_3_0, grammarAccess.getHttpMethodsAccess().getPUTPUTKeyword_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getHttpMethodsRule());
					}
					setWithLastConsumed($current, "PUT", lv_PUT_3_0, "PUT");
				}
			)
		)
		    |
		(
			(
				lv_PATCH_4_0='PATCH'
				{
					newLeafNode(lv_PATCH_4_0, grammarAccess.getHttpMethodsAccess().getPATCHPATCHKeyword_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getHttpMethodsRule());
					}
					setWithLastConsumed($current, "PATCH", lv_PATCH_4_0, "PATCH");
				}
			)
		)
	)
;

// Entry rule entryRuleRDBMS
entryRuleRDBMS returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRDBMSRule()); }
	iv_ruleRDBMS=ruleRDBMS
	{ $current=$iv_ruleRDBMS.current; }
	EOF;

// Rule RDBMS
ruleRDBMS returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_MYSQL_0_0='MySQL'
				{
					newLeafNode(lv_MYSQL_0_0, grammarAccess.getRDBMSAccess().getMYSQLMySQLKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRDBMSRule());
					}
					setWithLastConsumed($current, "MYSQL", lv_MYSQL_0_0, "MySQL");
				}
			)
		)
		    |
		(
			(
				lv_POSTGRES_1_0='Postgres'
				{
					newLeafNode(lv_POSTGRES_1_0, grammarAccess.getRDBMSAccess().getPOSTGRESPostgresKeyword_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRDBMSRule());
					}
					setWithLastConsumed($current, "POSTGRES", lv_POSTGRES_1_0, "Postgres");
				}
			)
		)
		    |
		(
			(
				lv_MARIADB_2_0='MariaDB'
				{
					newLeafNode(lv_MARIADB_2_0, grammarAccess.getRDBMSAccess().getMARIADBMariaDBKeyword_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRDBMSRule());
					}
					setWithLastConsumed($current, "MARIADB", lv_MARIADB_2_0, "MariaDB");
				}
			)
		)
		    |
		(
			(
				lv_H2_3_0='H2'
				{
					newLeafNode(lv_H2_3_0, grammarAccess.getRDBMSAccess().getH2H2Keyword_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRDBMSRule());
					}
					setWithLastConsumed($current, "H2", lv_H2_3_0, "H2");
				}
			)
		)
		    |
		(
			(
				lv_ORACLE_4_0='Oracle'
				{
					newLeafNode(lv_ORACLE_4_0, grammarAccess.getRDBMSAccess().getORACLEOracleKeyword_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRDBMSRule());
					}
					setWithLastConsumed($current, "ORACLE", lv_ORACLE_4_0, "Oracle");
				}
			)
		)
	)
;

// Entry rule entryRuleDatabaseRelations
entryRuleDatabaseRelations returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDatabaseRelationsRule()); }
	iv_ruleDatabaseRelations=ruleDatabaseRelations
	{ $current=$iv_ruleDatabaseRelations.current; }
	EOF;

// Rule DatabaseRelations
ruleDatabaseRelations returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_MANY_TO_MANY_0_0='ManyToMany'
				{
					newLeafNode(lv_MANY_TO_MANY_0_0, grammarAccess.getDatabaseRelationsAccess().getMANY_TO_MANYManyToManyKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDatabaseRelationsRule());
					}
					setWithLastConsumed($current, "MANY_TO_MANY", lv_MANY_TO_MANY_0_0, "ManyToMany");
				}
			)
		)
		    |
		(
			(
				lv_MANY_TO_ONE_1_0='ManyToOne'
				{
					newLeafNode(lv_MANY_TO_ONE_1_0, grammarAccess.getDatabaseRelationsAccess().getMANY_TO_ONEManyToOneKeyword_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDatabaseRelationsRule());
					}
					setWithLastConsumed($current, "MANY_TO_ONE", lv_MANY_TO_ONE_1_0, "ManyToOne");
				}
			)
		)
		    |
		(
			(
				lv_ONE_TO_MANY_2_0='OneToMany'
				{
					newLeafNode(lv_ONE_TO_MANY_2_0, grammarAccess.getDatabaseRelationsAccess().getONE_TO_MANYOneToManyKeyword_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDatabaseRelationsRule());
					}
					setWithLastConsumed($current, "ONE_TO_MANY", lv_ONE_TO_MANY_2_0, "OneToMany");
				}
			)
		)
	)
;

// Entry rule entryRuleParamTransfer
entryRuleParamTransfer returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getParamTransferRule()); }
	iv_ruleParamTransfer=ruleParamTransfer
	{ $current=$iv_ruleParamTransfer.current; }
	EOF;

// Rule ParamTransfer
ruleParamTransfer returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_REQUEST_BODY_0_0='RequestBody'
				{
					newLeafNode(lv_REQUEST_BODY_0_0, grammarAccess.getParamTransferAccess().getREQUEST_BODYRequestBodyKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getParamTransferRule());
					}
					setWithLastConsumed($current, "REQUEST_BODY", lv_REQUEST_BODY_0_0, "RequestBody");
				}
			)
		)
		    |
		(
			(
				lv_REQUEST_PARAM_1_0='RequestParam'
				{
					newLeafNode(lv_REQUEST_PARAM_1_0, grammarAccess.getParamTransferAccess().getREQUEST_PARAMRequestParamKeyword_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getParamTransferRule());
					}
					setWithLastConsumed($current, "REQUEST_PARAM", lv_REQUEST_PARAM_1_0, "RequestParam");
				}
			)
		)
		    |
		(
			(
				lv_PATH_VARIABLE_2_0='PathVariable'
				{
					newLeafNode(lv_PATH_VARIABLE_2_0, grammarAccess.getParamTransferAccess().getPATH_VARIABLEPathVariableKeyword_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getParamTransferRule());
					}
					setWithLastConsumed($current, "PATH_VARIABLE", lv_PATH_VARIABLE_2_0, "PathVariable");
				}
			)
		)
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
