/**
 * generated by Xtext 2.37.0
 */
package org.xtext.example.springgen.springgen.impl;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

import org.xtext.example.springgen.springgen.AngularApp;
import org.xtext.example.springgen.springgen.AngularComponent;
import org.xtext.example.springgen.springgen.AngularModule;
import org.xtext.example.springgen.springgen.AngularService;
import org.xtext.example.springgen.springgen.SpringgenPackage;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Angular App</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.example.springgen.springgen.impl.AngularAppImpl#getName <em>Name</em>}</li>
 *   <li>{@link org.xtext.example.springgen.springgen.impl.AngularAppImpl#getComponents <em>Components</em>}</li>
 *   <li>{@link org.xtext.example.springgen.springgen.impl.AngularAppImpl#getServices <em>Services</em>}</li>
 *   <li>{@link org.xtext.example.springgen.springgen.impl.AngularAppImpl#getModules <em>Modules</em>}</li>
 * </ul>
 *
 * @generated
 */
public class AngularAppImpl extends MinimalEObjectImpl.Container implements AngularApp
{
  /**
   * The default value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected static final String NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected String name = NAME_EDEFAULT;

  /**
   * The cached value of the '{@link #getComponents() <em>Components</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getComponents()
   * @generated
   * @ordered
   */
  protected EList<AngularComponent> components;

  /**
   * The cached value of the '{@link #getServices() <em>Services</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getServices()
   * @generated
   * @ordered
   */
  protected EList<AngularService> services;

  /**
   * The cached value of the '{@link #getModules() <em>Modules</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getModules()
   * @generated
   * @ordered
   */
  protected EList<AngularModule> modules;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected AngularAppImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return SpringgenPackage.Literals.ANGULAR_APP;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getName()
  {
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setName(String newName)
  {
    String oldName = name;
    name = newName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SpringgenPackage.ANGULAR_APP__NAME, oldName, name));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<AngularComponent> getComponents()
  {
    if (components == null)
    {
      components = new EObjectContainmentEList<AngularComponent>(AngularComponent.class, this, SpringgenPackage.ANGULAR_APP__COMPONENTS);
    }
    return components;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<AngularService> getServices()
  {
    if (services == null)
    {
      services = new EObjectContainmentEList<AngularService>(AngularService.class, this, SpringgenPackage.ANGULAR_APP__SERVICES);
    }
    return services;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<AngularModule> getModules()
  {
    if (modules == null)
    {
      modules = new EObjectContainmentEList<AngularModule>(AngularModule.class, this, SpringgenPackage.ANGULAR_APP__MODULES);
    }
    return modules;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case SpringgenPackage.ANGULAR_APP__COMPONENTS:
        return ((InternalEList<?>)getComponents()).basicRemove(otherEnd, msgs);
      case SpringgenPackage.ANGULAR_APP__SERVICES:
        return ((InternalEList<?>)getServices()).basicRemove(otherEnd, msgs);
      case SpringgenPackage.ANGULAR_APP__MODULES:
        return ((InternalEList<?>)getModules()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case SpringgenPackage.ANGULAR_APP__NAME:
        return getName();
      case SpringgenPackage.ANGULAR_APP__COMPONENTS:
        return getComponents();
      case SpringgenPackage.ANGULAR_APP__SERVICES:
        return getServices();
      case SpringgenPackage.ANGULAR_APP__MODULES:
        return getModules();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case SpringgenPackage.ANGULAR_APP__NAME:
        setName((String)newValue);
        return;
      case SpringgenPackage.ANGULAR_APP__COMPONENTS:
        getComponents().clear();
        getComponents().addAll((Collection<? extends AngularComponent>)newValue);
        return;
      case SpringgenPackage.ANGULAR_APP__SERVICES:
        getServices().clear();
        getServices().addAll((Collection<? extends AngularService>)newValue);
        return;
      case SpringgenPackage.ANGULAR_APP__MODULES:
        getModules().clear();
        getModules().addAll((Collection<? extends AngularModule>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case SpringgenPackage.ANGULAR_APP__NAME:
        setName(NAME_EDEFAULT);
        return;
      case SpringgenPackage.ANGULAR_APP__COMPONENTS:
        getComponents().clear();
        return;
      case SpringgenPackage.ANGULAR_APP__SERVICES:
        getServices().clear();
        return;
      case SpringgenPackage.ANGULAR_APP__MODULES:
        getModules().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case SpringgenPackage.ANGULAR_APP__NAME:
        return NAME_EDEFAULT == null ? name != null : !NAME_EDEFAULT.equals(name);
      case SpringgenPackage.ANGULAR_APP__COMPONENTS:
        return components != null && !components.isEmpty();
      case SpringgenPackage.ANGULAR_APP__SERVICES:
        return services != null && !services.isEmpty();
      case SpringgenPackage.ANGULAR_APP__MODULES:
        return modules != null && !modules.isEmpty();
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (name: ");
    result.append(name);
    result.append(')');
    return result.toString();
  }

} //AngularAppImpl
