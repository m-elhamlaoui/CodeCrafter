/**
 * generated by Xtext 2.37.0
 */
package org.xtext.example.springgen.springgen.impl;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.xtext.example.springgen.springgen.AngularComponent;
import org.xtext.example.springgen.springgen.SpringgenPackage;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Angular Component</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.example.springgen.springgen.impl.AngularComponentImpl#getName <em>Name</em>}</li>
 *   <li>{@link org.xtext.example.springgen.springgen.impl.AngularComponentImpl#getSelector <em>Selector</em>}</li>
 *   <li>{@link org.xtext.example.springgen.springgen.impl.AngularComponentImpl#getTemplateUrl <em>Template Url</em>}</li>
 *   <li>{@link org.xtext.example.springgen.springgen.impl.AngularComponentImpl#getStyleUrls <em>Style Urls</em>}</li>
 * </ul>
 *
 * @generated
 */
public class AngularComponentImpl extends MinimalEObjectImpl.Container implements AngularComponent
{
  /**
   * The default value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected static final String NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected String name = NAME_EDEFAULT;

  /**
   * The default value of the '{@link #getSelector() <em>Selector</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSelector()
   * @generated
   * @ordered
   */
  protected static final String SELECTOR_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getSelector() <em>Selector</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSelector()
   * @generated
   * @ordered
   */
  protected String selector = SELECTOR_EDEFAULT;

  /**
   * The default value of the '{@link #getTemplateUrl() <em>Template Url</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getTemplateUrl()
   * @generated
   * @ordered
   */
  protected static final String TEMPLATE_URL_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getTemplateUrl() <em>Template Url</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getTemplateUrl()
   * @generated
   * @ordered
   */
  protected String templateUrl = TEMPLATE_URL_EDEFAULT;

  /**
   * The default value of the '{@link #getStyleUrls() <em>Style Urls</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getStyleUrls()
   * @generated
   * @ordered
   */
  protected static final String STYLE_URLS_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getStyleUrls() <em>Style Urls</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getStyleUrls()
   * @generated
   * @ordered
   */
  protected String styleUrls = STYLE_URLS_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected AngularComponentImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return SpringgenPackage.Literals.ANGULAR_COMPONENT;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getName()
  {
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setName(String newName)
  {
    String oldName = name;
    name = newName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SpringgenPackage.ANGULAR_COMPONENT__NAME, oldName, name));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getSelector()
  {
    return selector;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setSelector(String newSelector)
  {
    String oldSelector = selector;
    selector = newSelector;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SpringgenPackage.ANGULAR_COMPONENT__SELECTOR, oldSelector, selector));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getTemplateUrl()
  {
    return templateUrl;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setTemplateUrl(String newTemplateUrl)
  {
    String oldTemplateUrl = templateUrl;
    templateUrl = newTemplateUrl;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SpringgenPackage.ANGULAR_COMPONENT__TEMPLATE_URL, oldTemplateUrl, templateUrl));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getStyleUrls()
  {
    return styleUrls;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setStyleUrls(String newStyleUrls)
  {
    String oldStyleUrls = styleUrls;
    styleUrls = newStyleUrls;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SpringgenPackage.ANGULAR_COMPONENT__STYLE_URLS, oldStyleUrls, styleUrls));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case SpringgenPackage.ANGULAR_COMPONENT__NAME:
        return getName();
      case SpringgenPackage.ANGULAR_COMPONENT__SELECTOR:
        return getSelector();
      case SpringgenPackage.ANGULAR_COMPONENT__TEMPLATE_URL:
        return getTemplateUrl();
      case SpringgenPackage.ANGULAR_COMPONENT__STYLE_URLS:
        return getStyleUrls();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case SpringgenPackage.ANGULAR_COMPONENT__NAME:
        setName((String)newValue);
        return;
      case SpringgenPackage.ANGULAR_COMPONENT__SELECTOR:
        setSelector((String)newValue);
        return;
      case SpringgenPackage.ANGULAR_COMPONENT__TEMPLATE_URL:
        setTemplateUrl((String)newValue);
        return;
      case SpringgenPackage.ANGULAR_COMPONENT__STYLE_URLS:
        setStyleUrls((String)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case SpringgenPackage.ANGULAR_COMPONENT__NAME:
        setName(NAME_EDEFAULT);
        return;
      case SpringgenPackage.ANGULAR_COMPONENT__SELECTOR:
        setSelector(SELECTOR_EDEFAULT);
        return;
      case SpringgenPackage.ANGULAR_COMPONENT__TEMPLATE_URL:
        setTemplateUrl(TEMPLATE_URL_EDEFAULT);
        return;
      case SpringgenPackage.ANGULAR_COMPONENT__STYLE_URLS:
        setStyleUrls(STYLE_URLS_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case SpringgenPackage.ANGULAR_COMPONENT__NAME:
        return NAME_EDEFAULT == null ? name != null : !NAME_EDEFAULT.equals(name);
      case SpringgenPackage.ANGULAR_COMPONENT__SELECTOR:
        return SELECTOR_EDEFAULT == null ? selector != null : !SELECTOR_EDEFAULT.equals(selector);
      case SpringgenPackage.ANGULAR_COMPONENT__TEMPLATE_URL:
        return TEMPLATE_URL_EDEFAULT == null ? templateUrl != null : !TEMPLATE_URL_EDEFAULT.equals(templateUrl);
      case SpringgenPackage.ANGULAR_COMPONENT__STYLE_URLS:
        return STYLE_URLS_EDEFAULT == null ? styleUrls != null : !STYLE_URLS_EDEFAULT.equals(styleUrls);
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (name: ");
    result.append(name);
    result.append(", selector: ");
    result.append(selector);
    result.append(", templateUrl: ");
    result.append(templateUrl);
    result.append(", styleUrls: ");
    result.append(styleUrls);
    result.append(')');
    return result.toString();
  }

} //AngularComponentImpl
