/**
 * generated by Xtext 2.37.0
 */
package org.xtext.example.springgen.springgen.impl;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import org.xtext.example.springgen.springgen.SpringgenPackage;
import org.xtext.example.springgen.springgen.ValueTypes;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Value Types</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.example.springgen.springgen.impl.ValueTypesImpl#getFLOAT <em>FLOAT</em>}</li>
 *   <li>{@link org.xtext.example.springgen.springgen.impl.ValueTypesImpl#getLONG <em>LONG</em>}</li>
 *   <li>{@link org.xtext.example.springgen.springgen.impl.ValueTypesImpl#getINTEGER <em>INTEGER</em>}</li>
 *   <li>{@link org.xtext.example.springgen.springgen.impl.ValueTypesImpl#getCHAR <em>CHAR</em>}</li>
 *   <li>{@link org.xtext.example.springgen.springgen.impl.ValueTypesImpl#getBOOLEAN <em>BOOLEAN</em>}</li>
 *   <li>{@link org.xtext.example.springgen.springgen.impl.ValueTypesImpl#getBYTE <em>BYTE</em>}</li>
 *   <li>{@link org.xtext.example.springgen.springgen.impl.ValueTypesImpl#getSTRING <em>STRING</em>}</li>
 * </ul>
 *
 * @generated
 */
public class ValueTypesImpl extends TypeImpl implements ValueTypes
{
  /**
   * The default value of the '{@link #getFLOAT() <em>FLOAT</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFLOAT()
   * @generated
   * @ordered
   */
  protected static final String FLOAT_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getFLOAT() <em>FLOAT</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFLOAT()
   * @generated
   * @ordered
   */
  protected String float_ = FLOAT_EDEFAULT;

  /**
   * The default value of the '{@link #getLONG() <em>LONG</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getLONG()
   * @generated
   * @ordered
   */
  protected static final String LONG_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getLONG() <em>LONG</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getLONG()
   * @generated
   * @ordered
   */
  protected String long_ = LONG_EDEFAULT;

  /**
   * The default value of the '{@link #getINTEGER() <em>INTEGER</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getINTEGER()
   * @generated
   * @ordered
   */
  protected static final String INTEGER_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getINTEGER() <em>INTEGER</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getINTEGER()
   * @generated
   * @ordered
   */
  protected String integer = INTEGER_EDEFAULT;

  /**
   * The default value of the '{@link #getCHAR() <em>CHAR</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCHAR()
   * @generated
   * @ordered
   */
  protected static final String CHAR_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getCHAR() <em>CHAR</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCHAR()
   * @generated
   * @ordered
   */
  protected String char_ = CHAR_EDEFAULT;

  /**
   * The default value of the '{@link #getBOOLEAN() <em>BOOLEAN</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getBOOLEAN()
   * @generated
   * @ordered
   */
  protected static final String BOOLEAN_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getBOOLEAN() <em>BOOLEAN</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getBOOLEAN()
   * @generated
   * @ordered
   */
  protected String boolean_ = BOOLEAN_EDEFAULT;

  /**
   * The default value of the '{@link #getBYTE() <em>BYTE</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getBYTE()
   * @generated
   * @ordered
   */
  protected static final String BYTE_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getBYTE() <em>BYTE</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getBYTE()
   * @generated
   * @ordered
   */
  protected String byte_ = BYTE_EDEFAULT;

  /**
   * The default value of the '{@link #getSTRING() <em>STRING</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSTRING()
   * @generated
   * @ordered
   */
  protected static final String STRING_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getSTRING() <em>STRING</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSTRING()
   * @generated
   * @ordered
   */
  protected String string = STRING_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ValueTypesImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return SpringgenPackage.Literals.VALUE_TYPES;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getFLOAT()
  {
    return float_;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setFLOAT(String newFLOAT)
  {
    String oldFLOAT = float_;
    float_ = newFLOAT;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SpringgenPackage.VALUE_TYPES__FLOAT, oldFLOAT, float_));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getLONG()
  {
    return long_;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setLONG(String newLONG)
  {
    String oldLONG = long_;
    long_ = newLONG;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SpringgenPackage.VALUE_TYPES__LONG, oldLONG, long_));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getINTEGER()
  {
    return integer;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setINTEGER(String newINTEGER)
  {
    String oldINTEGER = integer;
    integer = newINTEGER;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SpringgenPackage.VALUE_TYPES__INTEGER, oldINTEGER, integer));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getCHAR()
  {
    return char_;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setCHAR(String newCHAR)
  {
    String oldCHAR = char_;
    char_ = newCHAR;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SpringgenPackage.VALUE_TYPES__CHAR, oldCHAR, char_));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getBOOLEAN()
  {
    return boolean_;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setBOOLEAN(String newBOOLEAN)
  {
    String oldBOOLEAN = boolean_;
    boolean_ = newBOOLEAN;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SpringgenPackage.VALUE_TYPES__BOOLEAN, oldBOOLEAN, boolean_));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getBYTE()
  {
    return byte_;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setBYTE(String newBYTE)
  {
    String oldBYTE = byte_;
    byte_ = newBYTE;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SpringgenPackage.VALUE_TYPES__BYTE, oldBYTE, byte_));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getSTRING()
  {
    return string;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setSTRING(String newSTRING)
  {
    String oldSTRING = string;
    string = newSTRING;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SpringgenPackage.VALUE_TYPES__STRING, oldSTRING, string));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case SpringgenPackage.VALUE_TYPES__FLOAT:
        return getFLOAT();
      case SpringgenPackage.VALUE_TYPES__LONG:
        return getLONG();
      case SpringgenPackage.VALUE_TYPES__INTEGER:
        return getINTEGER();
      case SpringgenPackage.VALUE_TYPES__CHAR:
        return getCHAR();
      case SpringgenPackage.VALUE_TYPES__BOOLEAN:
        return getBOOLEAN();
      case SpringgenPackage.VALUE_TYPES__BYTE:
        return getBYTE();
      case SpringgenPackage.VALUE_TYPES__STRING:
        return getSTRING();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case SpringgenPackage.VALUE_TYPES__FLOAT:
        setFLOAT((String)newValue);
        return;
      case SpringgenPackage.VALUE_TYPES__LONG:
        setLONG((String)newValue);
        return;
      case SpringgenPackage.VALUE_TYPES__INTEGER:
        setINTEGER((String)newValue);
        return;
      case SpringgenPackage.VALUE_TYPES__CHAR:
        setCHAR((String)newValue);
        return;
      case SpringgenPackage.VALUE_TYPES__BOOLEAN:
        setBOOLEAN((String)newValue);
        return;
      case SpringgenPackage.VALUE_TYPES__BYTE:
        setBYTE((String)newValue);
        return;
      case SpringgenPackage.VALUE_TYPES__STRING:
        setSTRING((String)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case SpringgenPackage.VALUE_TYPES__FLOAT:
        setFLOAT(FLOAT_EDEFAULT);
        return;
      case SpringgenPackage.VALUE_TYPES__LONG:
        setLONG(LONG_EDEFAULT);
        return;
      case SpringgenPackage.VALUE_TYPES__INTEGER:
        setINTEGER(INTEGER_EDEFAULT);
        return;
      case SpringgenPackage.VALUE_TYPES__CHAR:
        setCHAR(CHAR_EDEFAULT);
        return;
      case SpringgenPackage.VALUE_TYPES__BOOLEAN:
        setBOOLEAN(BOOLEAN_EDEFAULT);
        return;
      case SpringgenPackage.VALUE_TYPES__BYTE:
        setBYTE(BYTE_EDEFAULT);
        return;
      case SpringgenPackage.VALUE_TYPES__STRING:
        setSTRING(STRING_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case SpringgenPackage.VALUE_TYPES__FLOAT:
        return FLOAT_EDEFAULT == null ? float_ != null : !FLOAT_EDEFAULT.equals(float_);
      case SpringgenPackage.VALUE_TYPES__LONG:
        return LONG_EDEFAULT == null ? long_ != null : !LONG_EDEFAULT.equals(long_);
      case SpringgenPackage.VALUE_TYPES__INTEGER:
        return INTEGER_EDEFAULT == null ? integer != null : !INTEGER_EDEFAULT.equals(integer);
      case SpringgenPackage.VALUE_TYPES__CHAR:
        return CHAR_EDEFAULT == null ? char_ != null : !CHAR_EDEFAULT.equals(char_);
      case SpringgenPackage.VALUE_TYPES__BOOLEAN:
        return BOOLEAN_EDEFAULT == null ? boolean_ != null : !BOOLEAN_EDEFAULT.equals(boolean_);
      case SpringgenPackage.VALUE_TYPES__BYTE:
        return BYTE_EDEFAULT == null ? byte_ != null : !BYTE_EDEFAULT.equals(byte_);
      case SpringgenPackage.VALUE_TYPES__STRING:
        return STRING_EDEFAULT == null ? string != null : !STRING_EDEFAULT.equals(string);
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (FLOAT: ");
    result.append(float_);
    result.append(", LONG: ");
    result.append(long_);
    result.append(", INTEGER: ");
    result.append(integer);
    result.append(", CHAR: ");
    result.append(char_);
    result.append(", BOOLEAN: ");
    result.append(boolean_);
    result.append(", BYTE: ");
    result.append(byte_);
    result.append(", STRING: ");
    result.append(string);
    result.append(')');
    return result.toString();
  }

} //ValueTypesImpl
