/**
 * generated by Xtext 2.37.0
 */
package org.xtext.example.springgen.springgen.impl;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.xtext.example.springgen.springgen.HttpMethods;
import org.xtext.example.springgen.springgen.SpringgenPackage;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Http Methods</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.example.springgen.springgen.impl.HttpMethodsImpl#getGET <em>GET</em>}</li>
 *   <li>{@link org.xtext.example.springgen.springgen.impl.HttpMethodsImpl#getDELETE <em>DELETE</em>}</li>
 *   <li>{@link org.xtext.example.springgen.springgen.impl.HttpMethodsImpl#getPOST <em>POST</em>}</li>
 *   <li>{@link org.xtext.example.springgen.springgen.impl.HttpMethodsImpl#getPUT <em>PUT</em>}</li>
 *   <li>{@link org.xtext.example.springgen.springgen.impl.HttpMethodsImpl#getPATCH <em>PATCH</em>}</li>
 * </ul>
 *
 * @generated
 */
public class HttpMethodsImpl extends MinimalEObjectImpl.Container implements HttpMethods
{
  /**
   * The default value of the '{@link #getGET() <em>GET</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getGET()
   * @generated
   * @ordered
   */
  protected static final String GET_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getGET() <em>GET</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getGET()
   * @generated
   * @ordered
   */
  protected String get = GET_EDEFAULT;

  /**
   * The default value of the '{@link #getDELETE() <em>DELETE</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDELETE()
   * @generated
   * @ordered
   */
  protected static final String DELETE_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getDELETE() <em>DELETE</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDELETE()
   * @generated
   * @ordered
   */
  protected String delete = DELETE_EDEFAULT;

  /**
   * The default value of the '{@link #getPOST() <em>POST</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getPOST()
   * @generated
   * @ordered
   */
  protected static final String POST_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getPOST() <em>POST</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getPOST()
   * @generated
   * @ordered
   */
  protected String post = POST_EDEFAULT;

  /**
   * The default value of the '{@link #getPUT() <em>PUT</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getPUT()
   * @generated
   * @ordered
   */
  protected static final String PUT_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getPUT() <em>PUT</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getPUT()
   * @generated
   * @ordered
   */
  protected String put = PUT_EDEFAULT;

  /**
   * The default value of the '{@link #getPATCH() <em>PATCH</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getPATCH()
   * @generated
   * @ordered
   */
  protected static final String PATCH_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getPATCH() <em>PATCH</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getPATCH()
   * @generated
   * @ordered
   */
  protected String patch = PATCH_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected HttpMethodsImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return SpringgenPackage.Literals.HTTP_METHODS;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getGET()
  {
    return get;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setGET(String newGET)
  {
    String oldGET = get;
    get = newGET;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SpringgenPackage.HTTP_METHODS__GET, oldGET, get));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getDELETE()
  {
    return delete;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setDELETE(String newDELETE)
  {
    String oldDELETE = delete;
    delete = newDELETE;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SpringgenPackage.HTTP_METHODS__DELETE, oldDELETE, delete));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getPOST()
  {
    return post;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setPOST(String newPOST)
  {
    String oldPOST = post;
    post = newPOST;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SpringgenPackage.HTTP_METHODS__POST, oldPOST, post));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getPUT()
  {
    return put;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setPUT(String newPUT)
  {
    String oldPUT = put;
    put = newPUT;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SpringgenPackage.HTTP_METHODS__PUT, oldPUT, put));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getPATCH()
  {
    return patch;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setPATCH(String newPATCH)
  {
    String oldPATCH = patch;
    patch = newPATCH;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SpringgenPackage.HTTP_METHODS__PATCH, oldPATCH, patch));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case SpringgenPackage.HTTP_METHODS__GET:
        return getGET();
      case SpringgenPackage.HTTP_METHODS__DELETE:
        return getDELETE();
      case SpringgenPackage.HTTP_METHODS__POST:
        return getPOST();
      case SpringgenPackage.HTTP_METHODS__PUT:
        return getPUT();
      case SpringgenPackage.HTTP_METHODS__PATCH:
        return getPATCH();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case SpringgenPackage.HTTP_METHODS__GET:
        setGET((String)newValue);
        return;
      case SpringgenPackage.HTTP_METHODS__DELETE:
        setDELETE((String)newValue);
        return;
      case SpringgenPackage.HTTP_METHODS__POST:
        setPOST((String)newValue);
        return;
      case SpringgenPackage.HTTP_METHODS__PUT:
        setPUT((String)newValue);
        return;
      case SpringgenPackage.HTTP_METHODS__PATCH:
        setPATCH((String)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case SpringgenPackage.HTTP_METHODS__GET:
        setGET(GET_EDEFAULT);
        return;
      case SpringgenPackage.HTTP_METHODS__DELETE:
        setDELETE(DELETE_EDEFAULT);
        return;
      case SpringgenPackage.HTTP_METHODS__POST:
        setPOST(POST_EDEFAULT);
        return;
      case SpringgenPackage.HTTP_METHODS__PUT:
        setPUT(PUT_EDEFAULT);
        return;
      case SpringgenPackage.HTTP_METHODS__PATCH:
        setPATCH(PATCH_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case SpringgenPackage.HTTP_METHODS__GET:
        return GET_EDEFAULT == null ? get != null : !GET_EDEFAULT.equals(get);
      case SpringgenPackage.HTTP_METHODS__DELETE:
        return DELETE_EDEFAULT == null ? delete != null : !DELETE_EDEFAULT.equals(delete);
      case SpringgenPackage.HTTP_METHODS__POST:
        return POST_EDEFAULT == null ? post != null : !POST_EDEFAULT.equals(post);
      case SpringgenPackage.HTTP_METHODS__PUT:
        return PUT_EDEFAULT == null ? put != null : !PUT_EDEFAULT.equals(put);
      case SpringgenPackage.HTTP_METHODS__PATCH:
        return PATCH_EDEFAULT == null ? patch != null : !PATCH_EDEFAULT.equals(patch);
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (GET: ");
    result.append(get);
    result.append(", DELETE: ");
    result.append(delete);
    result.append(", POST: ");
    result.append(post);
    result.append(", PUT: ");
    result.append(put);
    result.append(", PATCH: ");
    result.append(patch);
    result.append(')');
    return result.toString();
  }

} //HttpMethodsImpl
