/**
 * generated by Xtext 2.37.0
 */
package org.xtext.example.springgen.springgen.impl;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.xtext.example.springgen.springgen.ParamTransfer;
import org.xtext.example.springgen.springgen.SpringgenPackage;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Param Transfer</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.example.springgen.springgen.impl.ParamTransferImpl#getREQUEST_BODY <em>REQUEST BODY</em>}</li>
 *   <li>{@link org.xtext.example.springgen.springgen.impl.ParamTransferImpl#getREQUEST_PARAM <em>REQUEST PARAM</em>}</li>
 *   <li>{@link org.xtext.example.springgen.springgen.impl.ParamTransferImpl#getPATH_VARIABLE <em>PATH VARIABLE</em>}</li>
 * </ul>
 *
 * @generated
 */
public class ParamTransferImpl extends MinimalEObjectImpl.Container implements ParamTransfer
{
  /**
   * The default value of the '{@link #getREQUEST_BODY() <em>REQUEST BODY</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getREQUEST_BODY()
   * @generated
   * @ordered
   */
  protected static final String REQUEST_BODY_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getREQUEST_BODY() <em>REQUEST BODY</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getREQUEST_BODY()
   * @generated
   * @ordered
   */
  protected String requesT_BODY = REQUEST_BODY_EDEFAULT;

  /**
   * The default value of the '{@link #getREQUEST_PARAM() <em>REQUEST PARAM</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getREQUEST_PARAM()
   * @generated
   * @ordered
   */
  protected static final String REQUEST_PARAM_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getREQUEST_PARAM() <em>REQUEST PARAM</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getREQUEST_PARAM()
   * @generated
   * @ordered
   */
  protected String requesT_PARAM = REQUEST_PARAM_EDEFAULT;

  /**
   * The default value of the '{@link #getPATH_VARIABLE() <em>PATH VARIABLE</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getPATH_VARIABLE()
   * @generated
   * @ordered
   */
  protected static final String PATH_VARIABLE_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getPATH_VARIABLE() <em>PATH VARIABLE</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getPATH_VARIABLE()
   * @generated
   * @ordered
   */
  protected String patH_VARIABLE = PATH_VARIABLE_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ParamTransferImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return SpringgenPackage.Literals.PARAM_TRANSFER;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getREQUEST_BODY()
  {
    return requesT_BODY;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setREQUEST_BODY(String newREQUEST_BODY)
  {
    String oldREQUEST_BODY = requesT_BODY;
    requesT_BODY = newREQUEST_BODY;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SpringgenPackage.PARAM_TRANSFER__REQUEST_BODY, oldREQUEST_BODY, requesT_BODY));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getREQUEST_PARAM()
  {
    return requesT_PARAM;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setREQUEST_PARAM(String newREQUEST_PARAM)
  {
    String oldREQUEST_PARAM = requesT_PARAM;
    requesT_PARAM = newREQUEST_PARAM;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SpringgenPackage.PARAM_TRANSFER__REQUEST_PARAM, oldREQUEST_PARAM, requesT_PARAM));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getPATH_VARIABLE()
  {
    return patH_VARIABLE;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setPATH_VARIABLE(String newPATH_VARIABLE)
  {
    String oldPATH_VARIABLE = patH_VARIABLE;
    patH_VARIABLE = newPATH_VARIABLE;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SpringgenPackage.PARAM_TRANSFER__PATH_VARIABLE, oldPATH_VARIABLE, patH_VARIABLE));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case SpringgenPackage.PARAM_TRANSFER__REQUEST_BODY:
        return getREQUEST_BODY();
      case SpringgenPackage.PARAM_TRANSFER__REQUEST_PARAM:
        return getREQUEST_PARAM();
      case SpringgenPackage.PARAM_TRANSFER__PATH_VARIABLE:
        return getPATH_VARIABLE();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case SpringgenPackage.PARAM_TRANSFER__REQUEST_BODY:
        setREQUEST_BODY((String)newValue);
        return;
      case SpringgenPackage.PARAM_TRANSFER__REQUEST_PARAM:
        setREQUEST_PARAM((String)newValue);
        return;
      case SpringgenPackage.PARAM_TRANSFER__PATH_VARIABLE:
        setPATH_VARIABLE((String)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case SpringgenPackage.PARAM_TRANSFER__REQUEST_BODY:
        setREQUEST_BODY(REQUEST_BODY_EDEFAULT);
        return;
      case SpringgenPackage.PARAM_TRANSFER__REQUEST_PARAM:
        setREQUEST_PARAM(REQUEST_PARAM_EDEFAULT);
        return;
      case SpringgenPackage.PARAM_TRANSFER__PATH_VARIABLE:
        setPATH_VARIABLE(PATH_VARIABLE_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case SpringgenPackage.PARAM_TRANSFER__REQUEST_BODY:
        return REQUEST_BODY_EDEFAULT == null ? requesT_BODY != null : !REQUEST_BODY_EDEFAULT.equals(requesT_BODY);
      case SpringgenPackage.PARAM_TRANSFER__REQUEST_PARAM:
        return REQUEST_PARAM_EDEFAULT == null ? requesT_PARAM != null : !REQUEST_PARAM_EDEFAULT.equals(requesT_PARAM);
      case SpringgenPackage.PARAM_TRANSFER__PATH_VARIABLE:
        return PATH_VARIABLE_EDEFAULT == null ? patH_VARIABLE != null : !PATH_VARIABLE_EDEFAULT.equals(patH_VARIABLE);
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (REQUEST_BODY: ");
    result.append(requesT_BODY);
    result.append(", REQUEST_PARAM: ");
    result.append(requesT_PARAM);
    result.append(", PATH_VARIABLE: ");
    result.append(patH_VARIABLE);
    result.append(')');
    return result.toString();
  }

} //ParamTransferImpl
