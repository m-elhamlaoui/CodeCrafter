/**
 * generated by Xtext 2.37.0
 */
package org.xtext.example.springgen.springgen.impl;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.xtext.example.springgen.springgen.ParamTransfer;
import org.xtext.example.springgen.springgen.SpringgenPackage;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Param Transfer</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.example.springgen.springgen.impl.ParamTransferImpl#getRequestBody <em>Request Body</em>}</li>
 *   <li>{@link org.xtext.example.springgen.springgen.impl.ParamTransferImpl#getRequestParam <em>Request Param</em>}</li>
 *   <li>{@link org.xtext.example.springgen.springgen.impl.ParamTransferImpl#getPathVariable <em>Path Variable</em>}</li>
 * </ul>
 *
 * @generated
 */
public class ParamTransferImpl extends MinimalEObjectImpl.Container implements ParamTransfer
{
  /**
   * The default value of the '{@link #getRequestBody() <em>Request Body</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getRequestBody()
   * @generated
   * @ordered
   */
  protected static final String REQUEST_BODY_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getRequestBody() <em>Request Body</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getRequestBody()
   * @generated
   * @ordered
   */
  protected String requestBody = REQUEST_BODY_EDEFAULT;

  /**
   * The default value of the '{@link #getRequestParam() <em>Request Param</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getRequestParam()
   * @generated
   * @ordered
   */
  protected static final String REQUEST_PARAM_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getRequestParam() <em>Request Param</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getRequestParam()
   * @generated
   * @ordered
   */
  protected String requestParam = REQUEST_PARAM_EDEFAULT;

  /**
   * The default value of the '{@link #getPathVariable() <em>Path Variable</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getPathVariable()
   * @generated
   * @ordered
   */
  protected static final String PATH_VARIABLE_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getPathVariable() <em>Path Variable</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getPathVariable()
   * @generated
   * @ordered
   */
  protected String pathVariable = PATH_VARIABLE_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ParamTransferImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return SpringgenPackage.Literals.PARAM_TRANSFER;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getRequestBody()
  {
    return requestBody;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setRequestBody(String newRequestBody)
  {
    String oldRequestBody = requestBody;
    requestBody = newRequestBody;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SpringgenPackage.PARAM_TRANSFER__REQUEST_BODY, oldRequestBody, requestBody));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getRequestParam()
  {
    return requestParam;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setRequestParam(String newRequestParam)
  {
    String oldRequestParam = requestParam;
    requestParam = newRequestParam;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SpringgenPackage.PARAM_TRANSFER__REQUEST_PARAM, oldRequestParam, requestParam));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getPathVariable()
  {
    return pathVariable;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setPathVariable(String newPathVariable)
  {
    String oldPathVariable = pathVariable;
    pathVariable = newPathVariable;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SpringgenPackage.PARAM_TRANSFER__PATH_VARIABLE, oldPathVariable, pathVariable));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case SpringgenPackage.PARAM_TRANSFER__REQUEST_BODY:
        return getRequestBody();
      case SpringgenPackage.PARAM_TRANSFER__REQUEST_PARAM:
        return getRequestParam();
      case SpringgenPackage.PARAM_TRANSFER__PATH_VARIABLE:
        return getPathVariable();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case SpringgenPackage.PARAM_TRANSFER__REQUEST_BODY:
        setRequestBody((String)newValue);
        return;
      case SpringgenPackage.PARAM_TRANSFER__REQUEST_PARAM:
        setRequestParam((String)newValue);
        return;
      case SpringgenPackage.PARAM_TRANSFER__PATH_VARIABLE:
        setPathVariable((String)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case SpringgenPackage.PARAM_TRANSFER__REQUEST_BODY:
        setRequestBody(REQUEST_BODY_EDEFAULT);
        return;
      case SpringgenPackage.PARAM_TRANSFER__REQUEST_PARAM:
        setRequestParam(REQUEST_PARAM_EDEFAULT);
        return;
      case SpringgenPackage.PARAM_TRANSFER__PATH_VARIABLE:
        setPathVariable(PATH_VARIABLE_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case SpringgenPackage.PARAM_TRANSFER__REQUEST_BODY:
        return REQUEST_BODY_EDEFAULT == null ? requestBody != null : !REQUEST_BODY_EDEFAULT.equals(requestBody);
      case SpringgenPackage.PARAM_TRANSFER__REQUEST_PARAM:
        return REQUEST_PARAM_EDEFAULT == null ? requestParam != null : !REQUEST_PARAM_EDEFAULT.equals(requestParam);
      case SpringgenPackage.PARAM_TRANSFER__PATH_VARIABLE:
        return PATH_VARIABLE_EDEFAULT == null ? pathVariable != null : !PATH_VARIABLE_EDEFAULT.equals(pathVariable);
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (RequestBody: ");
    result.append(requestBody);
    result.append(", RequestParam: ");
    result.append(requestParam);
    result.append(", PathVariable: ");
    result.append(pathVariable);
    result.append(')');
    return result.toString();
  }

} //ParamTransferImpl
