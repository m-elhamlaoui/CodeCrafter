/**
 * generated by Xtext 2.37.0
 */
package org.xtext.example.springgen.springgen;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EObject;

/**
 * <!-- begin-user-doc -->
 * A representation of the model object '<em><b>Dockerfile</b></em>'.
 * <!-- end-user-doc -->
 *
 * <p>
 * The following features are supported:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.example.springgen.springgen.Dockerfile#getBaseImage <em>Base Image</em>}</li>
 *   <li>{@link org.xtext.example.springgen.springgen.Dockerfile#getInstructions <em>Instructions</em>}</li>
 * </ul>
 *
 * @see org.xtext.example.springgen.springgen.SpringgenPackage#getDockerfile()
 * @model
 * @generated
 */
public interface Dockerfile extends EObject
{
  /**
   * Returns the value of the '<em><b>Base Image</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Base Image</em>' containment reference.
   * @see #setBaseImage(BaseImage)
   * @see org.xtext.example.springgen.springgen.SpringgenPackage#getDockerfile_BaseImage()
   * @model containment="true"
   * @generated
   */
  BaseImage getBaseImage();

  /**
   * Sets the value of the '{@link org.xtext.example.springgen.springgen.Dockerfile#getBaseImage <em>Base Image</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Base Image</em>' containment reference.
   * @see #getBaseImage()
   * @generated
   */
  void setBaseImage(BaseImage value);

  /**
   * Returns the value of the '<em><b>Instructions</b></em>' containment reference list.
   * The list contents are of type {@link org.xtext.example.springgen.springgen.DockerInstruction}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Instructions</em>' containment reference list.
   * @see org.xtext.example.springgen.springgen.SpringgenPackage#getDockerfile_Instructions()
   * @model containment="true"
   * @generated
   */
  EList<DockerInstruction> getInstructions();

} // Dockerfile
